
class {{ name }}Repository {
	{{ name }}Repository(this._http);

	final Http _http;
{% for operation in operations %}
	{% if operation.hasDescription %}/// {{ operation.description }}
	{% endif %}Future<{% if operation.hasUndefinedResponseBody %}/* response with undefined model name */{% else %}{#
	#}{{ operation.responseModel }}{% endif %}> {{ operation.name }}({% for parameter in operation.pathParameters %}{#
  #}String {{ parameter.name }}{% if not forloop.last or operation.hasQueryParameters or operation.hasBody %}, {% endif %}{% endfor %}{#
  #}{% for parameter in operation.queryParameters %}{{ parameter.type }} {{ parameter.name }}{% if not forloop.last or operation.hasBody %}, {% endif %}{% endfor %}{#
  #}{% if operation.hasBody %}{% if operation.requestBody.hasUnsupportedEncoding %}/* body with unsupported encoding */{% endif %}{#
  #}{% if operation.requestBody.isModel %}{{ operation.requestBody.modelType }}Entry {{ operation.requestBody.modelName }}{% endif %}{#
  #}{% if operation.requestBody.isArray %}List<{{ operation.requestBody.modelType }}Entry> {{ operation.requestBody.modelName }}{% endif %}{#
  #}{% if operation.requestBody.isDictionary %}{% for parameter in operation.requestBody.parameters %}{{ parameter.type }} {{ parameter.name }}{% if not forloop.last %}, {% endif %}{#
  #}{% endfor %}{% endif %}{% endif %}) async {
  	final response = await _http.{{ operation.httpMethod }}<Map<String, Object>>(
  		{{ name }}Urls.{{ operation.path.name }}{% if operation.path.hasParameters %}{#
  		#}({% for parameter in operation.path.parameters %}{{ parameter }}{% if not forloop.last %}, {% endif %}{% endfor %}){% endif%},{#
  		#}{% if operation.hasQueryParameters %}
  		query: {
  			{% for parameter in operation.queryParameters %}'{{ parameter.serverName }}': {{ parameter.name }},{% if not forloop.last %}
  			{% endif %}{% endfor %}
  		},{% endif %}{% if operation.hasBody %}
  		body: {% if operation.requestBody.isModel %}{{ operation.requestBody.modelName }}Entry.toJson(){% endif %}{#
  		#}{% if operation.requestBody.hasUnsupportedEncoding %}/* body with unsupported encoding */{% endif %}{#
  		#}{% if operation.requestBody.isDictionary %}{
  			{% for parameter in operation.requestBody.parameters %}'{{ parameter.serverName }}': {{ parameter.name }},{% if not forloop.last %}
  			{% endif %}{% endfor %}
  		}{% endif %},{% endif %}{% if operation.requestBody.hasFormEncoding %}
  		contentType: Headers.formUrlEncodedContentType,{% endif %}
  	);{% if operation.hasResponseModel %}
  	return {{ operation.responseModel }}.fromJson(response.body);{% endif %}
	}
{% endfor %}}