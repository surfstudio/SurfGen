
import io.reactivex.Completable
import io.reactivex.Single
import retrofit2.http.Body
import retrofit2.http.Header
import retrofit2.http.DELETE
import retrofit2.http.GET
import retrofit2.http.PATCH
import retrofit2.http.POST
import retrofit2.http.PUT
import retrofit2.http.Path
import retrofit2.http.Query

interface {{ name }}Api {
	{% for operation in operations %}
	{% if operation.hasDescription %}/**
	 * {{ operation.description }}
	 */
	{% endif %}@{{ operation.httpMethod }}({{ operation.path.constName }})
	fun {{ operation.name }}({% for parameter in operation.pathParameters %}
    	@Path("{{ parameter.serverName }}") {{ parameter.name }}: String{#
    	#}{% if not forloop.last or operation.hasQueryParameters or operation.hasBody %},{% else %}
    {% endif %}{% endfor %}{#
    	#}{% for parameter in operation.queryParameters %}
    	@Query("{{ parameter.serverName }}") {{ parameter.name }}: {{ parameter.type }}{% if not forloop.last or operation.hasBody %},{% else %}
    {% endif %}{% endfor %}{#
    	#}{% if operation.requestBody.isModel %}
    	@Body {{ operation.requestBody.modelName }}: {{ operation.requestBody.modelType }}
    {% endif %}{#
    	#}{% if operation.requestBody.isArray %}
    	@Body {{ operation.requestBody.modelName }}: List<{{ operation.requestBody.modelType }}>
    {% endif %}{#
    	#}{% for parameter in operation.requestBody.parameters %}{#
        #}@Body {{ parameter.name }}: {{ parameter.type }}{% if not forloop.last %},{% else %}
    {% endif %}{% endfor %}{#
    #}): {% if operation.responseBody.isUndefined %}/* response with undefined model name */{#
    #}{% else %}{% if operation.responseBody.isEmpty %}Completable{% else %}Single<{{ operation.responseBody.model }}>{% endif %}{% endif %}
	{% endfor %}
}