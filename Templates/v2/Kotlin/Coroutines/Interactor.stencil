package ru.surfgen.android.network.generated.interactor

import ru.surfgen.android.domain.entity.*
import ru.surfgen.android.network.generated.api.{{ service.name }}Api
import ru.surfgen.android.network.generated.repo.{{ service.name }}Repository
import ru.surfgen.android.network.generated.entry.*
import javax.inject.Inject
import javax.inject.Singleton

@Singleton
class {{ service.name }}Interactor @Inject constructor(
    private val {{ service.name|lowercaseFirstLetter }}Repository: {{ service.name }}Repository
) { {% for path in service.paths %}{% for operation in path.operations %}
    /** @see [{{ service.name }}Api.{{ operation.httpMethod}}{{ path.name|capitalizeFirstLetter }}] */
    suspend fun {{ operation.httpMethod}}{{ path.name|capitalizeFirstLetter }}{#
    #}({% for parameter in operation.pathParameters %}
        {{ parameter.name|snakeCaseToCamelCase }}: String,{% endfor %}{#
        #}{% for parameter in operation.queryParameters %}
        {{ parameter.name|snakeCaseToCamelCase }}: {#
            #}{% if parameter.typeModel.isArray %}List<{% endif %}{#
            #}{% if parameter.typeModel.name == "integer" or parameter.typeModel.aliasTypeName == "integer" %}Int{#
            #}{% elif parameter.typeModel.name == "number" or parameter.typeModel.aliasTypeName == "number" %}Double{#
            #}{% elif parameter.typeModel.name == "string" or parameter.typeModel.aliasTypeName == "string" %}String{#
            #}{% elif parameter.typeModel.name == "boolean" or parameter.typeModel.aliasTypeName == "boolean" %}Boolean{#
            #}{% else %}{{ parameter.typeModel.name }}{% endif %}{#
            #}{% if parameter.typeModel.isArray %}>{% endif %}{#
            #}{% if not parameter.isRequired %}?{% endif %},{% endfor %}{#
        #}{% for requestModelName in operation.requestGenerationModel.typeNames %}
        {{ requestModelName|lowercaseFirstLetter }}{% if operation.requestGenerationModel.isTypeArray %}s{% endif %}: {#
        #}{% if operation.requestGenerationModel.isTypeArray %}List<{% endif %}{{ requestModelName }}{#
        #}{% if operation.requestGenerationModel.isTypeArray %}>{% endif %}Entry{#
        #}{% if not operation.requestModel.isRequired %}?{% endif %}{% endfor %}
    ): {% if operation.responseGenerationModel.key == "200" %}{#
        #}{% if operation.responseGenerationModel.value.isTypeArray %}List<{% endif %}{#
        #}{{ operation.responseGenerationModel.value.typeNames|join }}{#
        #}Entity{% if operation.responseGenerationModel.value.isTypeArray %}>{% endif %}{#
        #}{% elif operation.responseGenerationModel.key == "201" or operation.responseGenerationModel.key == "204" %}Unit{% endif %} =
        {{ service.name|lowercaseFirstLetter }}Repository.{{ operation.httpMethod}}{{ path.name|capitalizeFirstLetter }}{#
        #}({% for parameter in operation.pathParameters %}
            {{ parameter.name|snakeCaseToCamelCase }} = {{ parameter.name|snakeCaseToCamelCase }},{% endfor %}{#
            #}{% for parameter in operation.queryParameters %}
            {{ parameter.name|snakeCaseToCamelCase }} = {{ parameter.name|snakeCaseToCamelCase }},{% endfor %}{#
            #}{% for requestModelName in operation.requestGenerationModel.typeNames %}
            {{ requestModelName|lowercaseFirstLetter }}{#
            #}{% if operation.requestGenerationModel.isTypeArray %}s{% endif %}{#
            #} = {{ requestModelName|lowercaseFirstLetter }}{% if operation.requestGenerationModel.isTypeArray %}s{% endif %}{% endfor %}
        )
    {% endfor %}{% endfor %}
}
