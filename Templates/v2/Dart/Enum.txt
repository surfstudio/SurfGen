{% for line in enum.description|splitLines %}
/// {{ line }}{% endfor %}
enum {{ enum.name }} {
{% for caseValue in enum.cases %}	{{ caseValue }}{% if not forloop.last %},{% endif %}
{% endfor %}}

extension _{{ enum.name }}Ext on {{ enum.name }} {

	static {{ enum.name }} byValue({#
	#}{% if enum.generatedType == "integer" %}int{#
    #}{% elif enum.generatedType == "number" %}double{#
    #}{% elif enum.generatedType == "string" %}String{#
    #}{% elif enum.generatedType == "boolean" %}bool{#
    #}{% endif %} value) {
    	switch (value) {
    		{% for caseValue in enum.cases %}case {% if enum.generatedType == "string" %}'{% endif %}{#
    		#}{{ caseValue }}{% if enum.generatedType == "string" %}'{% endif %}:
    			return {{ enum.name }}.{{ caseValue }};
    		{% endfor %}
    	}
	}

	{% if enum.generatedType == "integer" %}int{#
    #}{% elif enum.generatedType == "number" %}double{#
    #}{% elif enum.generatedType == "string" %}String{#
    #}{% elif enum.generatedType == "boolean" %}bool{#
    #}{% endif %} get rawValue {
    	switch (this) {
    		{% for caseValue in enum.cases %}case {{ enum.name }}.{{ caseValue }}:
    			return {% if enum.generatedType == "string" %}'{% endif %}{{ caseValue }}{% if enum.generatedType == "string" %}'{% endif %};
    		{% endfor %}
    	}
	}
}