import 'package:json_annotation/json_annotation.dart';
import 'package:retrofit/retrofit.dart';
import 'package:dio/dio.dart';

part '{{ service.name|camelCaseToSnakeCase  }}_api.g.dart'

@RestApi(baseUrl: "")
abstract class {{ service.name }}Api {
    factory {{ service.name }}Api(Dio dio, {String baseUrl}) = _{{ service.name }}Api;
	{% for path in service.paths %}{% for operation in path.operations %}{% for requestModelName in operation.requestGenerationModel.typeNames %}
	{% for line in operation.summary|splitLines %}/// {{ line }}
  	{% endfor %}{% for line in operation.description|splitLines %}/// {{ line }}
  	{% endfor %}@{{ operation.httpMethod|uppercase }}("{{ path.path }}")
    {% if operation.requstGenerationModel.encoding == "application/x-www-form-urlencoded" %}@FormUrlEncoded(){% endif %}{#
    #}Future<{% if operation.responseGenerationModel %}{#
    #}{% if operation.responseGenerationModel.isTypeArray %}List<{% endif %}{#
    #}{% for responseName in operation.responseGenerationModel.typeNames %}{{ responseName }}{% endfor %}{#
    #}{% if operation.responseGenerationModel.isTypeArray %}>{% endif %}{#
    #}{% else %}void{% endif %}> {{ operation.httpMethod }}{{ path.name|capitalizeFirstLetter }}({% for parameter in operation.pathParameters %}
    	@Path() String {{ parameter.name|snakeCaseToCamelCase }},{% endfor %}{#
    	#}{% for parameter in operation.queryParameters %}
    	@Query("{{ parameter.name }}") {#
            #}{% if parameter.typeModel.isArray %}List<{% endif %}{#
            #}{% if parameter.typeModel.name == "integer" or parameter.typeModel.aliasTypeName == "integer" %}int{#
            #}{% elif parameter.typeModel.name == "number" or parameter.typeModel.aliasTypeName == "number" %}double{#
            #}{% elif parameter.typeModel.name == "string" or parameter.typeModel.aliasTypeName == "string" %}String{#
            #}{% elif parameter.typeModel.name == "boolean" or parameter.typeModel.aliasTypeName == "boolean" %}bool{#
            #}{% else %}{{ parameter.typeModel.name }}{% endif %}{#
            #}{% if parameter.typeModel.isArray %}>{% endif %}{#
            #} {{ parameter.name|snakeCaseToCamelCase }},{% endfor %}
    	@Body() {% if operation.requestGenerationModel.isTypeArray %}List<{% endif %}{{ requestModelName }}{#
        #}{% if operation.requestGenerationModel.isTypeArray %}>{% endif %} {{ requestModelName|lowercaseFirstLetter }}{% if operation.requestGenerationModel.isTypeArray %}s{% endif %}
    );
	{% empty %}
    {% for line in operation.summary|splitLines %}/// {{ line }}
  	{% endfor %}{% for line in operation.description|splitLines %}/// {{ line }}
  	{% endfor %}@{{ operation.httpMethod|uppercase }}("{{ path.path }}")
    Future<{% if operation.responseGenerationModel %}{#
    #}{% if operation.responseGenerationModel.isTypeArray %}List<{% endif %}{#
    #}{% for responseName in operation.responseGenerationModel.typeNames %}{{ responseName }}{% endfor %}{#
    #}{% if operation.responseGenerationModel.isTypeArray %}>{% endif %}{#
    #}{% else %}void{% endif %}> {{ operation.httpMethod }}{{ path.name|capitalizeFirstLetter }}({% for parameter in operation.pathParameters %}
        @Path() String {{ parameter.name|snakeCaseToCamelCase }}{#
        #}{% if not forloop.last or operation.queryParameters %},{% else %}
    {% endif %}{% endfor %}{#
        #}{% for parameter in operation.queryParameters %}
        @Query("{{ parameter.name }}") {#
            #}{% if parameter.typeModel.isArray %}List<{% endif %}{#
            #}{% if parameter.typeModel.name == "integer" or parameter.typeModel.aliasTypeName == "integer" %}int{#
            #}{% elif parameter.typeModel.name == "number" or parameter.typeModel.aliasTypeName == "number" %}double{#
            #}{% elif parameter.typeModel.name == "string" or parameter.typeModel.aliasTypeName == "string" %}String{#
            #}{% elif parameter.typeModel.name == "boolean" or parameter.typeModel.aliasTypeName == "boolean" %}bool{#
            #}{% else %}{{ parameter.typeModel.name }}{% endif %}{#
            #}{% if parameter.typeModel.isArray %}>{% endif %}{#
            #} {{ parameter.name|snakeCaseToCamelCase }}{#
            #}{% if not forloop.last %},{% else %}
    {% endif %}{% endfor %});
    {% endfor %}{% endfor %}{% endfor %}
}