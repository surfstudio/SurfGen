
class {{ service.name }}Repository {
	{{ service.name }}Repository(this._http);

	final Http _http;
{% for path in service.paths %}{% for operation in path.operations %}{% for requestModelName in operation.requestGenerationModel.typeNames %}
	{% for line in operation.summary|splitLines %}/// {{ line }}
  {% endfor %}{% for line in operation.description|splitLines %}/// {{ line }}
  {% endfor %}Future<{% if operation.responseGenerationModel %}{#
    #}{% if operation.responseGenerationModel.isTypeArray %}List<{% endif %}{#
    #}{% for responseName in operation.responseGenerationModel.typeNames %}{{ responseName }}{% endfor %}{#
    #}{% if operation.responseGenerationModel.isTypeArray %}>{% endif %}{#
    #}{% else %}void{% endif %}> {{ operation.httpMethod }}{{ path.name|capitalizeFirstLetter }}{#
    #}{% if operation.requestGenerationModel.typeNames.count > 1 %}With{{ requestModelName }}{% endif %}{#
    #}({% for parameter in operation.pathParameters %}{#
  #}String {{ parameter.name }}, {% endfor %}{#
  #}{% for parameter in operation.queryParameters %}{#
    #}{% if parameter.typeModel.isArray %}List<{% endif %}{#
    #}{% if parameter.typeModel.name == "integer" or parameter.typeModel.aliasTypeName == "integer" %}int{#
    #}{% elif parameter.typeModel.name == "number" or parameter.typeModel.aliasTypeName == "number" %}double{#
    #}{% elif parameter.typeModel.name == "string" or parameter.typeModel.aliasTypeName == "string" %}String{#
    #}{% elif parameter.typeModel.name == "boolean" or parameter.typeModel.aliasTypeName == "boolean" %}bool{#
    #}{% else %}{{ parameter.typeModel.name }}{% endif %}{#
    #}{% if parameter.typeModel.isArray %}>{% endif %} {{ parameter.name|snakeCaseToCamelCase }}, {% endfor %}{#
  #}{% if operation.requestGenerationModel.isTypeArray %}List<{% endif %}{{ requestModelName }}{#
    #}{% if operation.requestGenerationModel.isTypeArray %}>{% endif %}{#
    #} {{ requestModelName|lowercaseFirstLetter }}{% if operation.requestGenerationModel.isTypeArray %}s{% endif %}) async {
  	final response = await _http.{{ operation.httpMethod }}<Map<String, Object>>(
  		{{ service.name }}Urls.{{ path.name }}{% if operation.pathParameters %}{#
  		#}({% for parameter in operation.pathParameters %}{{ parameter.name }}{% if not forloop.last %}, {% endif %}{% endfor %}){% endif%},{#
  		#}{% if operation.queryParameters %}
  		query: {
  			{% for parameter in operation.queryParameters %}'{{ parameter.name }}': {{ parameter.name|snakeCaseToCamelCase }},{% if not forloop.last %}
  			{% endif %}{% endfor %}
  		},{% endif %}
  		body: {{ requestModelName|lowercaseFirstLetter }}.toJson(){#
  		#},{% if operation.requstGenerationModel.encoding == "application/x-www-form-urlencoded" %}
  		contentType: Headers.formUrlEncodedContentType,{% endif %}
  	);{% if operation.responseGenerationModel %}
  	return {% for responseName in operation.responseGenerationModel.typeNames %}{{ responseName }}{% endfor %}{#
    #}.fromJson(response.body);{% endif %}
	}
{% empty %}
  {% for line in operation.summary|splitLines %}/// {{ line }}
  {% endfor %}{% for line in operation.description|splitLines %}/// {{ line }}
  {% endfor %}Future<{% if operation.responseGenerationModel %}{#
    #}{% if operation.responseGenerationModel.isTypeArray %}List<{% endif %}{#
    #}{% for responseName in operation.responseGenerationModel.typeNames %}{{ responseName }}{% endfor %}{#
    #}{% if operation.responseGenerationModel.isTypeArray %}>{% endif %}{#
    #}{% else %}void{% endif %}> {{ operation.httpMethod }}{{ path.name|capitalizeFirstLetter }}({% for parameter in operation.pathParameters %}{#
  #}String {{ parameter.name }}{% if not forloop.last or operation.hasQueryParameters %}, {% endif %}{% endfor %}{#
  #}{% for parameter in operation.queryParameters %}{#
    #}{% if parameter.typeModel.isArray %}List<{% endif %}{#
    #}{% if parameter.typeModel.name == "integer" or parameter.typeModel.aliasTypeName == "integer" %}int{#
    #}{% elif parameter.typeModel.name == "number" or parameter.typeModel.aliasTypeName == "number" %}double{#
    #}{% elif parameter.typeModel.name == "string" or parameter.typeModel.aliasTypeName == "string" %}String{#
    #}{% elif parameter.typeModel.name == "boolean" or parameter.typeModel.aliasTypeName == "boolean" %}bool{#
    #}{% else %}{{ parameter.typeModel.name }}{% endif %}{#
    #}{% if parameter.typeModel.isArray %}>{% endif %} {{ parameter.name|snakeCaseToCamelCase }}{#
    #}{% if not forloop.last %}, {% endif %}{% endfor %}) async {
    final response = await _http.{{ operation.httpMethod }}<Map<String, Object>>(
      {{ service.name }}Urls.{{ path.name }}{% if operation.pathParameters %}{#
      #}({% for parameter in operation.pathParameters %}{{ parameter }}{% if not forloop.last %}, {% endif %}{% endfor %}){% endif%},{#
      #}{% if operation.queryParameters %}
      query: {
        {% for parameter in operation.queryParameters %}'{{ parameter.name }}': {{ parameter.name|snakeCaseToCamelCase }},{% if not forloop.last %}
        {% endif %}{% endfor %}
      },{% endif %}
    );{% if operation.responseGenerationModel %}
    return {% for responseName in operation.responseGenerationModel.typeNames %}{{ responseName }}{% endfor %}{#
    #}.fromJson(response.body);{% endif %}
  }
{% endfor %}{% endfor %}{% endfor %}}