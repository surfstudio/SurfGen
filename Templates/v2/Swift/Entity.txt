
import NodeKit
{% for line in model.description|splitLines %}
/// {{ line }}{% endfor %}
public struct {{ model.name }}Entity {

    // MARK: - Public Properties
{% for property in model.properties %}    
    {% for line in property.description|splitLines %}
    /// {{ line }}{% endfor %}public let {{ property.name|snakeCaseToCamelCase }}: {#
    #}{% if property.isTypeArray %}[{% endif %}{#
    #}{% if property.typeName == "integer" %}Int{#
    #}{% elif property.typeName == "number" %}Double{#
    #}{% elif property.typeName == "string" %}String{#
    #}{% elif property.typeName == "boolean" %}Bool{#
    #}{% else %}{{ property.typeName }}{% if property.isTypeObject %}Entity{% endif %}{% endif %}{#
    #}{% if property.isTypeArray %}]{% endif %}{#
    #}{% if property.isNullable %}?{% endif %}
{% endfor %}
    // MARK: - Initialization

    public init({% for property in model.properties %}{{ property.name|snakeCaseToCamelCase }}: {#
    #}{% if property.isTypeArray %}[{% endif %}{#
    #}{% if property.typeName == "integer" %}Int{#
    #}{% elif property.typeName == "number" %}Double{#
    #}{% elif property.typeName == "string" %}String{#
    #}{% elif property.typeName == "boolean" %}Bool{#
    #}{% else %}{{ property.typeName }}{% if property.isTypeObject %}Entity{% endif %}{% endif %}{#
    #}{% if property.isTypeArray %}]{% endif %}{% if property.isNullable %}?{% endif %}{% if not forloop.last %},
                {% else %}) {{ '{' }}{% endif %}{% endfor %}
    {% for property in model.properties %}{#
    #}    self.{{ property.name|snakeCaseToCamelCase }} = {{ property.name|snakeCaseToCamelCase }}
    {% endfor %}}

}

// MARK: - DTOConvertible

extension {{ model.name }}Entity: DTOConvertible {
    public static func from(dto model: {{ model.name }}Entry) throws -> {{ model.name }}Entity {
        return .init({% for property in model.properties %}{{ property.name|snakeCaseToCamelCase }}: {#
        #}{% if property.isTypeObject %}.from(dto: model.{{ property.name }}){% else %}model.{{ property.name }}{% endif %}{#
        #}{% if not forloop.last %},
                     {% endif %}{% endfor %})
    }

    public func toDTO() throws -> {{ model.name }}Entry {
        return .init({% for property in model.properties %}{{ property.name }}: {{ property.name|snakeCaseToCamelCase }}{#
        #}{% if property.isTypeObject %}.toDTO(){% endif %}{#
        #}{% if not forloop.last %},
                     {% endif %}{% endfor %})
    }
}
