//
//  UnitedService.swift
//

import NodeKit

public protocol UnitedService {

    /// Удаление аккаунта
    func deleteAccount(disconnectAccountRequest: DisconnectAccountRequestEntity) -> Observer<InfoMessageEntity>

    /// Список объединенных аккаунтов
    func getAccounts() -> Observer<[UnitedItemEntity]>

    /// Список объединенных аккаунтов для переноса средств
    func getAccountsForTransfer() -> Observer<[AccountForTransferEntity]>

    /// Информация по триколорID. нужна для добавления аккаунта в обращении
    func getInfo(smartCardOrAgreement: String) -> Observer<TricolorIdInfoEntity>

    /// Проверка доступности добавления аккаунта
    func getIsAccountUnionAvailable() -> Observer<InfoMessageEntity>

    /// Причины отсоединения
    func getReasons() -> Observer<[DisconnectReasonEntity]>

    /// Список ваучеров для переноса
    func getVouchersForTransfer() -> Observer<[VouchersForTransferEntity]>

    /// Добавление аккаунта
    func postAccount(addAccountRequest: AddAccountRequestEntity) -> Observer</* response with undefined model name */>

    /// Смена аккаунта
    func postChangeAccount(changeAccountRequest: ChangeAccountRequestEntity) -> Observer<AuthResponseEntity>

    /// Перенос средств и услуг
    func postTransfer(transferRequest: TransferRequestEntity) -> Observer<InfoMessageEntity>

    /// Перенос средств и услуг
    func postTransfer(transferServiceRequest: TransferServiceRequestEntity) -> Observer<InfoMessageEntity>

}
