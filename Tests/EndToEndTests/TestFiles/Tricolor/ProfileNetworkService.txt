//
//  ProfileNetworkService.swift
//

import NodeKit

public class ProfileNetworkService: ProfileService {

    // MARK: - Private Properties

    private var builder: DefaultChain<ProfileUrlRoute> {
        return DefaultChain()
    }

    // MARK: - Public Methods

    func getCreditInfo() -> Observer<CreditInformationEntity> {
        return builder
            .route(.get, .profileCreditInfo)
            .build()
            .process()
        }
    }

    func getRegistrationInfo() -> Observer<AllClientInfoEntity> {
        return builder
            .route(.get, .profileRegistrationInfo)
            .build()
            .process()
        }
    }

    func updateChangeAlias(changeAliasRequest: ChangeAliasRequestEntity) -> Observer<InfoMessageEntity> {
        return builder
            .route(.put, .profileChangeAlias)
            .build()
            .process(changeAliasRequest)
        }
    }

    func updateChangePassword(changePasswordRequest: ChangePasswordRequestEntity) -> Observer<InfoMessageEntity> {
        return builder
            .route(.put, .profileChangePassword)
            .build()
            .process(changePasswordRequest)
        }
    }

    func updateUpdateInfo(updateUserInfo: UpdateUserInfoEntity) -> Observer</* response with undefined model name */> {
        return builder
            .route(.patch, .profileUpdateInfo)
            .build()
            .process(updateUserInfo)
        }
    }

    func updateUpdateInfo(updateUserInfoFromProfile: UpdateUserInfoFromProfileEntity) -> Observer</* response with undefined model name */> {
        return builder
            .route(.put, .profileUpdateInfo)
            .build()
            .process(updateUserInfoFromProfile)
        }
    }

}
